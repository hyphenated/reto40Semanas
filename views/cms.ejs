<!DOCTYPE html>
<html>
  <head>
    <title>Reto 40 Semanas</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/main.css">
    <!--STYLES END-->
  </head>

  <body>
  	<div class="wrapper-full">
        <div class="topbar">
            <div class="title">
                <%= __('app name') %>
            </div>
            <div class="notifications">
                <div class="name"></div>
                <div class="buttons">
                    <div class="icon-sound-mix"></div>
                    <div class="icon-log-out"></div>
                </div>
            </div>
        </div>
  		<aside class="sidebar-menu">
            <ul id="menu">
                <a href="">
                    <li class="element"><span class="icon-home"></span><%= __('dashboard') %></li>
                </a>
                <a href="">
                    <li class="element"><span class="icon-user"></span><%= __('users') %></li>
                </a>
                <a href="">
                    <li class="element"><span class="icon-users"></span><%= __('competitors') %></li>
                </a>
                <a href="">
                    <li class="element"><span class="icon-credit"></span><%= __('bets') %></li>
                </a>
                <a href="">
                    <li class="element"><span class="icon-calendar"></span><%= __('weeks') %></li>
                </a>
                <a href="">
                    <li class="element"><span class="icon-sound-mix"></span><%= __('rounds') %></li>
                </a>
            </ul>
        </aside>
        <div class="dashboard">
            <%- body %>
        </div>
  	</div>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/modernizr.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
